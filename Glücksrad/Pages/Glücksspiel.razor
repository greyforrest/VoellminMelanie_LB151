@page "/"
@using Glücksrad.Data
@inject FirebaseService firebase

@if (spieler != null)
{
    @if (istSpielFertig)
    {
        <div class="text-center">
            <h1>Game gewonnen! Gratulation!</h1>
            <button class="btn btn-dark mt-3" onclick="@neuesSpiel">Neues Spiel</button>

        </div>
    }
    @if (radGedreht)
    {
        <div class="row">
            <div class="col">Spieler: @spieler.name</div>
            <div class="col">Runde: @spieler.runden</div>
            <div class="col">Kontostand: @spieler.kontostand</div>
            <div class="col">Lebenspunkte: @spieler.lebenspunkte / 3</div>
        </div>
        <div class="row">
            <div class="col-9">
                @firebase.radResultat
            </div>
            <div class="col text-right">
                <button class="btn btn-dark" onclick="@stopp">Spiel beenden</button><br />

            </div>
        </div>
        <div id="guess-lines">
            <p>
                @foreach (char letter in aktuellesWort.ToCharArray())
                {
                     if (bekannteBuchstaben.Contains(Char.ToLower(letter)))
                    {
                        <span> @letter </span>
                    }
                    else
                    {
                        <span> _ </span>
                    }
                }
            </p>
        </div>

        <p>Kategorie: @aktuelleKategorie</p>
        <input placeholder="Buchstabe oder Wort raten" type="text" @bind="@rateversuch" />
        <button class="btn btn-dark" onclick="@raten">Raten</button>
        <br />
        <p>@isRateversuchKorrekt</p>
        <p>Vokal kaufen: @(geldfaktor * 2) Franken</p>
        <div class="row">
            <div class="col-1"><button class="btn btn-dark" @onclick="() => vokalRaten('a')">A</button></div>
            <div class="col-1"><button class="btn btn-dark" @onclick="() => vokalRaten('e')">E</button></div>
            <div class="col-1"><button class="btn btn-dark" @onclick="() => vokalRaten('i')">I</button></div>
            <div class="col-1"><button class="btn btn-dark" @onclick="() => vokalRaten('o')">O</button></div>
            <div class="col-1"><button class="btn btn-dark" @onclick="() => vokalRaten('u')">U</button></div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col">Spieler: @spieler.name</div>
            <div class="col">Runde: @spieler.runden</div>
            <div class="col">Kontostand: @spieler.kontostand</div>
            <div class="col">Lebenspunkte: @spieler.lebenspunkte / 3</div>
        </div>
        <div class="row">
            <div class="col-9"></div>
            <div class="col text-right">
                <button class="btn btn-dark" onclick="@stopp">Spiel beenden</button><br />

            </div>
        </div>
        <div class="text-center" id="wheel-spin">
            <button class="btn btn-dark mt-3" onclick="@radDrehen">Glücksrad drehen</button>
            <p>@firebase.radResultat</p>
        </div>
    }


}
else
{
    <div class="col text-center" id="start-screen">
        <h1>Geben Sie einen Namen an, um zu spielen</h1>
        <input type="text" class="form-control" @bind="@name" /><br />
        <button class="btn btn-dark mt-3" onclick="@start">Spielen</button>
    </div>
}


@code {
    private bool radGedreht = false;
    private string name = null;
    private Spieler spieler = null;
    private string rateversuch;
    private List<Phrase> phrasen;
    private string aktuellesWort;
    private String aktuelleKategorie;
    private string isRateversuchKorrekt = "";
    private List<char> bekannteBuchstaben = new List<char>() {'.', '!', '?', ' '};
    private int geldfaktor = 0;
    private bool istSpielFertig = false;

    protected async override void OnInitialized()
    {
        phrasen = await firebase.getAllePhrasen();

    }

    private void raten()
    {
        if (rateversuch.Length > 1)
        {
            if (rateversuch.ToLower() == aktuellesWort.ToLower())
            {
                isRateversuchKorrekt = "Korrekt geraten!";
                spieler.kontostandÄndern(geldfaktor * 5);
                foreach (char buchstabe in aktuellesWort)
                {
                    bekannteBuchstaben.Add(buchstabe);
                }
                spielGewonnen();

            }
            else
            {
                bool lebtSpielerNoch = spieler.lebenspunktAbziehen();
                isRateversuchKorrekt = "";
                if (!lebtSpielerNoch)
                {
                    spielVerloren();
                }
            }

        }
        else if (rateversuch.Length == 1)
        {
            if (!rateversuch.Contains("a") && !rateversuch.Contains("A") && !rateversuch.Contains("e") && !rateversuch.Contains("E") && !rateversuch.Contains("i") && !rateversuch.Contains("I") && !rateversuch.Contains("o") && !rateversuch.Contains("O") && !rateversuch.Contains("u") && !rateversuch.Contains("U"))
            {
                if(bekannteBuchstaben.Contains(rateversuch.ToLower().ToCharArray()[0]))
                {
                    isRateversuchKorrekt = "Bereits geraten...";
                } else if (aktuellesWort.ToLower().Contains(rateversuch.ToLower().ToCharArray()[0]))
                {
                    bekannteBuchstaben.Add(rateversuch.ToLower().ToCharArray()[0]);
                    isRateversuchKorrekt = "";
                    spieler.kontostandÄndern(geldfaktor);
                    if (vollesWortBekannt())
                    {
                        isRateversuchKorrekt = "Wort erraten! Glückwunsch";
                        spielGewonnen();
                    }

                }
                else
                {
                    bool lebtSpielerNoch = spieler.lebenspunktAbziehen();
                    isRateversuchKorrekt = "";
                    if (!lebtSpielerNoch)
                    {
                        spielVerloren();
                    }
                }
            }
            else
            {
                isRateversuchKorrekt = "Sie können keine Vokale raten";
            }

        }
        else
        {
            isRateversuchKorrekt = "Rateversuch ungültig";
        }
        rateversuch = "";
    }

    private void vokalRaten(char vokal)
    {
        isRateversuchKorrekt = "";
        if (spieler.kontostand >= (geldfaktor * 2))
        {
            spieler.kontostandÄndern(-(geldfaktor * 2));
            if (aktuellesWort.ToLower().Contains(char.ToLower(vokal)))
            {
                bekannteBuchstaben.Add(vokal);
                if (vollesWortBekannt())
                {
                    isRateversuchKorrekt = "Wort erraten! Glückwunsch";
                    spielGewonnen();
                }

            }
            else
            {
                bool lebtSpielerNoch = spieler.lebenspunktAbziehen();
                if (!lebtSpielerNoch)
                {
                    spielVerloren();
                }
            }
        }
        else
        {
            isRateversuchKorrekt = "Sie haben nicht genug Geld dafür.";
        }

    }

    private void spielVerloren()
    {
        if(aktuellesWort != null)
        {
            foreach (char buchstaben in aktuellesWort)
            {
                bekannteBuchstaben.Add(buchstaben);
            }
            spieler.kontostandLeeren();
        }
        isRateversuchKorrekt = "Spiel verloren";
        name = "";
        Thread.Sleep(2000);
        stopp();
    }

    private void spielGewonnen()
    {
        Thread.Sleep(1000);
        isRateversuchKorrekt = "";
        radGedreht = false;
        firebase.radResultat = "Noch nicht gedreht";
        bekannteBuchstaben = new List<char>();
    }

    private bool hatSpielerWert()
    {
        if (name != null && name.Length >= 2)
        {
            spieler = new Spieler(name);
            return true;
        }
        return false;
    }

    private void radDrehen()
    {
        if(spieler.bereitsGespielteWörter.Count < phrasen.Count)
        {
            spieler.rundenzahlErhöhen();
            int glückszahl = new Random().Next(25);
            if (glückszahl == 1)
            {
                firebase.radResultat = "Bankrott!";
                spielVerloren();
            }
            else
            {
                geldfaktor = glückszahl * 15;
                firebase.radResultat = "Geld pro richtiger Buchstabe: " + geldfaktor;

                while (true)
                {
                    int randWortindex = new Random().Next(phrasen.Count);
                    Phrase aktuell = phrasen.ElementAt(randWortindex);
                    if (spieler.wortHinzufügen(aktuell.phrase))
                    {
                        aktuellesWort = aktuell.phrase;
                        aktuelleKategorie = aktuell.kategorie;
                        break;
                    }
                }
                radGedreht = true;
                StateHasChanged();
            }
        } else
        {
            istSpielFertig = true;
            firebase.highscoreHinzufügen(spieler);

        }


    }

    private bool vollesWortBekannt()
    {
        foreach (char letter in aktuellesWort)
        {
            if (!bekannteBuchstaben.Contains(Char.ToLower(letter)))
            {
                return false;
            }
        }
        return true;
    }

    public void start()
    {
        if (name != null && name.Length >= 2)
        {
            spieler = new Spieler(name);
        }
    }

    public void stopp()
    {
        firebase.highscoreHinzufügen(spieler);
        spieler = null;
        radGedreht = false;
    }

    public void neuesSpiel()
    {
        istSpielFertig = false;
        spieler = null;
        radGedreht = false;
    }
}
